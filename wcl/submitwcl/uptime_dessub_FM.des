# defines my environment
#<<include ../felipe_cfg.des>>
<<include ../felipe_cfg_cmp4.des>>

#<<include ../modulewcl/modnamepat.wcl>>
#<<include ../modulewcl/01-query_tileinfo.wcl>>
#<<include ../modulewcl/02-find_ccds_in_tile.wcl>>
#<<include ../modulewcl/03-make_swarp_weights.wcl>> 
#<<include ../modulewcl/04-call_swarp_customweights.wcl>>

#<<include destest_computingsite.des>>       


project = FM
target_site = descmp4
home_archive = prodbeta
des_http_section = file-http


# comment out submit_run_dir if want to have submit side in same directory as submit wcl
#submit_run_dir = /cluster_scratch/refact/dessub/submit/${ops_run_dir}

reqnum = 0002
jira_id = ME-TEST # example 
label = query_tileinfo,test 

pipeline = me # used in desstat output 
pipeprod = Y2ME # eups meta package name
pipever  = 1.0+3E # eups meta package version

ops_run_dir = ${project}/${pipeline}/${tilename}-r${reqnum}/p${attnum:2}
unitname = ${tilename}

tilename = DES2246-4457
database_section = db-destest
local_filepath = /work/devel/felipe/LOCAL_DESAR
swarpbasename = ${tilename}-r${reqnum}/p${attnum:2}

# because we start a python on the remote site with user
# nobody in this test setup. we need to trick the system
# to look for the python eggs somewhere else.
#<job_environment>
#   PYTHON_EGG_CACHE =  /cluster_scratch/users/felipe/secret
#</job_environment>

blocklist = uptime

<block>
    <uptime>
	modulelist = uptime 
    </uptime>
</block>


# dummy uptime module
<module>
    <uptime>
        wrappername = generic.py
        #modnamepat=${modnamepat_tile_generic}
        <exec_1>
            execname = uptime
        </exec_1>
    </uptime>
</module>

