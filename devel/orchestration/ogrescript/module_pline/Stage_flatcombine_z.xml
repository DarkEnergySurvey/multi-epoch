   <target name="Stage_flatcombine_z" description="create z band flat correction">
        <esequence>

             <write path="${local.out}/${flatcombine.log}" text="true"
                   errorProperty="failed" rethrow="false" append="true">
                   <segment string=" -- flatcombine results for ${flatz.list}" lineBreaks="1"/>
             </write>

               <edeclare name="abpm"  string="${bpm.fits.name}"/>
               <edeclare name="abias" string="${bias.fits.path}/${bias.fits.name}"/>
               <edeclare name="alist" string="${flatz.list}"/>
               <edeclare name="afile" string="${flatz.fits.path}/${flatz.fits.name}"/>

                       <rtexec inheritedEnv="false" execDir="${nite.dir}"
                          args="${flatcombine.exec} ${flatcombine.args}" quiet="true">
                          <errMonitor file="${local.out}/${flatcombine.log}"/>
                          <outMonitor file="${local.out}/${flatcombine.log}"/>
                       </rtexec>

             <write path="${local.out}/${flatcombine.log}" text="true"
                   errorProperty="failed" rethrow="false" append="true">
                   <segment string=" -- flatcombine complete " lineBreaks="2"/>
             </write>

        <edeclare name="content_end"  string="test end"/>
        <econdblock type="else-if">
          <econdtask>
            <eeval>
             <statement>
                <ecompare string="${platform}">
                   <predicate string="TG" comparator="EQUALS"/>
                </ecompare>
             </statement>
            </eeval>
              <esequence>
                <eassign name="content_end"    string="End Stage_flatcombine for ccd ${ccd.num} data on $G{host} for nite ${nite}"/>
              </esequence>
          </econdtask>
              <esequence>
                <eassign name="content_end"    string="End Stage_flatcombine for ccd ${ccd.num} for nite ${nite}"/>
              </esequence>
        </econdblock>

            <publish>
              <event ensembleid="${ensemble.id}" workflowid="${jid}"
                   nodeid="$R{content_end}" currentState="1">
                   <property name="message" value="$R{content_end}"/>
              </event>
            </publish>


        </esequence>

   </target>
