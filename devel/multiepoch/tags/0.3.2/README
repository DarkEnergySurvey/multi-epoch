* For more documentation see:
https://opensource.ncsa.illinois.edu/confluence/display/DESDM/Multiepoch+Development+Notes


* To EUPS setup the module from trunk

setup -v -r multiepoch/trunk

Some code descriptions:

- gencoaddtile.tcl:
  Original tck code from Brian Yanny

- gencoaddtile.py: 
  This is the *exact* translation of the TCL code gencoaddtile.tcl
  Creates file: coaddtiles_table_reproduced.dat

- gencoaddtile_plots.py:
  gencoaddtile_plots_all_SKY.py:

  Plot the tiles re-generated from gencoaddtile.py reading them from
  the file: coaddtiles_table_reproduced.dat

- gencoaddtile_newcorners.py:
  Creates the COADDTILE table with the new corners and new schema,

- compare_corners_SWarp2Database.py:
  Compare the corners from a SWarped TILE fitsfile, against the values
  stored in the database table

- insert_CCDcorners_toIMAGE.py:
  Script to insert CCD corners into the NEW DB schema. Not needed
  anymore, as they are written automatically by the Framework

- insert_CCDcorners_toIMAGE_oldSchema.py:
  Script to insert CCD corners into the old DB schema.	

- insert_custom_tile_db.py:
  inserts a smaller section of the DES2246-4457 tile into the DB
  for testing purposes.  

- add_test_tile_to_DB.py:
  Same as above

- create_me_catalog_inputs_table.py:
  Creates a custom table (in felipe's schema for now) with the
  relevant meta-data information from catalogs for a given FINALCUT tag.

- create_me_image_inputs_table.py:
  Same as above, but for images

- coadd_MEF:
Creates a co-added MEF fits file from a set of single-plane fits containing
the SCI/MSK/WGT planes. Interpolates the SCI plane using information in the
'custom'-weight mask, and also creates the MSK plane to be used by SExtractor
for IMAFLAG_ISO.


Libraries/Classes

- multiepoch:
  Utils and general libraries for the multi-epoch pipeline

- multiepoch.task:
  The location for each individual task/step for the multi-epoch pipeline

- descoords.py:
  Proto-type class to handle coords in new TEST DB and compute
  coordinates for tiles
 
- DESfits.py  
  A fitsio-based class to handle DES MEF files
